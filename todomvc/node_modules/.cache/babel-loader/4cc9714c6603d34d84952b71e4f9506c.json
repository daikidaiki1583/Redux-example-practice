{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\daiki\\\\redux\\\\examples\\\\todomvc\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\daiki\\\\redux\\\\examples\\\\todomvc\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TODO, DELETE_TODO, EDIT_TODO, COMPLETE_TODO, COMPLETE_ALL_TODOS, CLEAR_COMPLETED } from '../constants/ActionTypes';\nvar initialState = [{\n  text: 'Use Redux',\n  completed: false,\n  id: 0\n}];\nexport default function todos() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [].concat(_toConsumableArray(state), [{\n        id: state.reduce(function (maxId, todo) {\n          return (Math.max(todo.id, maxId), -1) + 1;\n        }, console.log(maxId)),\n        completed: false,\n        text: action.text\n      }]);\n\n    case DELETE_TODO:\n      return state.filter(function (todo) {\n        return todo.id !== action.id;\n      });\n\n    case EDIT_TODO:\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          text: action.text\n        }) : todo;\n      });\n\n    case COMPLETE_TODO:\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          completed: !todo.completed\n        }) : todo;\n      });\n\n    case COMPLETE_ALL_TODOS:\n      var areAllMarked = state.every(function (todo) {\n        return todo.completed;\n      });\n      return state.map(function (todo) {\n        return _objectSpread({}, todo, {\n          completed: !areAllMarked\n        });\n      });\n\n    case CLEAR_COMPLETED:\n      return state.filter(function (todo) {\n        return todo.completed === false;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\daiki\\redux\\examples\\todomvc\\src\\reducers\\todos.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","COMPLETE_ALL_TODOS","CLEAR_COMPLETED","initialState","text","completed","id","todos","state","action","type","reduce","maxId","todo","Math","max","console","log","filter","map","areAllMarked","every"],"mappings":";;AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,kBALF,EAMEC,eANF,QAOO,0BAPP;AASA,IAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,SAAS,EAAE,KAFb;AAGEC,EAAAA,EAAE,EAAE;AAHN,CADmB,CAArB;AAQA,eAAe,SAASC,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,QAAL;AACE,0CACKW,KADL,IAEE;AACEF,QAAAA,EAAE,EAAEE,KAAK,CAACG,MAAN,CAAa,UAACC,KAAD,EAAQC,IAAR;AAAA,iBAAiB,CAChCC,IAAI,CAACC,GAAL,CAASF,IAAI,CAACP,EAAd,EAAkBM,KAAlB,GAA0B,CAAC,CADK,IACA,CADjB;AAAA,SAAb,EAEFI,OAAO,CAACC,GAAR,CAAYL,KAAZ,CAFE,CADN;AAKEP,QAAAA,SAAS,EAAE,KALb;AAMED,QAAAA,IAAI,EAAEK,MAAM,CAACL;AANf,OAFF;;AAYF,SAAKN,WAAL;AACE,aAAOU,KAAK,CAACU,MAAN,CAAa,UAAAL,IAAI;AAAA,eACtBA,IAAI,CAACP,EAAL,KAAYG,MAAM,CAACH,EADG;AAAA,OAAjB,CAAP;;AAIF,SAAKP,SAAL;AACE,aAAOS,KAAK,CAACW,GAAN,CAAU,UAAAN,IAAI;AAAA,eACnBA,IAAI,CAACP,EAAL,KAAYG,MAAM,CAACH,EAAnB,qBACOO,IADP;AACaT,UAAAA,IAAI,EAAEK,MAAM,CAACL;AAD1B,aAEES,IAHiB;AAAA,OAAd,CAAP;;AAMF,SAAKb,aAAL;AACE,aAAOQ,KAAK,CAACW,GAAN,CAAU,UAAAN,IAAI;AAAA,eACnBA,IAAI,CAACP,EAAL,KAAYG,MAAM,CAACH,EAAnB,qBACOO,IADP;AACaR,UAAAA,SAAS,EAAE,CAACQ,IAAI,CAACR;AAD9B,aAEEQ,IAHiB;AAAA,OAAd,CAAP;;AAMF,SAAKZ,kBAAL;AACE,UAAMmB,YAAY,GAAGZ,KAAK,CAACa,KAAN,CAAY,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACR,SAAT;AAAA,OAAhB,CAArB;AACA,aAAOG,KAAK,CAACW,GAAN,CAAU,UAAAN,IAAI;AAAA,iCAChBA,IADgB;AAEnBR,UAAAA,SAAS,EAAE,CAACe;AAFO;AAAA,OAAd,CAAP;;AAKF,SAAKlB,eAAL;AACE,aAAOM,KAAK,CAACU,MAAN,CAAa,UAAAL,IAAI;AAAA,eAAIA,IAAI,CAACR,SAAL,KAAmB,KAAvB;AAAA,OAAjB,CAAP;;AAEF;AACE,aAAOG,KAAP;AA5CJ;AA8CD","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED\n} from '../constants/ActionTypes'\n\nconst initialState = [\n  {\n    text: 'Use Redux',\n    completed: false,\n    id: 0\n  }\n]\n\nexport default function todos(state = initialState, action) { \n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: state.reduce((maxId, todo) => (\n            Math.max(todo.id, maxId), -1) + 1,\n            console.log(maxId)\n          ),\n          completed: false,\n          text: action.text\n        },\n      ]\n\n    case DELETE_TODO:\n      return state.filter(todo =>\n        todo.id !== action.id\n      )\n\n    case EDIT_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, text: action.text } :\n          todo\n      )\n\n    case COMPLETE_TODO:\n      return state.map(todo =>\n        todo.id === action.id ?\n          { ...todo, completed: !todo.completed } :\n          todo\n      )\n\n    case COMPLETE_ALL_TODOS:\n      const areAllMarked = state.every(todo => todo.completed)\n      return state.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n\n    case CLEAR_COMPLETED:\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}