{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daiki\\\\redux\\\\examples\\\\counter\\\\src\\\\components\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementAsync = this.incrementAsync.bind(this);\n    this.incrementIfOdd = this.incrementIfOdd.bind(this);\n  }\n\n  incrementIfOdd() {\n    if (this.props.value % 2 !== 0) {\n      this.props.onIncrement();\n    }\n  }\n\n  incrementAsync() {\n    setTimeout(this.props.onIncrement, 1000);\n  }\n\n  render() {\n    const _this$props = this.props,\n          value = _this$props.value,\n          onIncrement = _this$props.onIncrement,\n          onDecrement = _this$props.onDecrement;\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"Clicked: \", value, \" times\", ' ', /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onIncrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"+\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onDecrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"-\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.incrementIfOdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Increment if odd\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.incrementAsync,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Increment async\"));\n  }\n\n}\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n  onIncrement: PropTypes.func.isRequired,\n  onDecrement: PropTypes.func.isRequired\n};\nexport default Counter;","map":{"version":3,"sources":["C:/Users/daiki/redux/examples/counter/src/components/Counter.js"],"names":["React","Component","PropTypes","Counter","constructor","props","incrementAsync","bind","incrementIfOdd","value","onIncrement","setTimeout","render","onDecrement","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKH,KAAL,CAAWI,KAAX,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC9B,WAAKJ,KAAL,CAAWK,WAAX;AACD;AACF;;AAEDJ,EAAAA,cAAc,GAAG;AACfK,IAAAA,UAAU,CAAC,KAAKN,KAAL,CAAWK,WAAZ,EAAyB,IAAzB,CAAV;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACqC,KAAKP,KAD1C;AAAA,UACCI,KADD,eACCA,KADD;AAAA,UACQC,WADR,eACQA,WADR;AAAA,UACqBG,WADrB,eACqBA,WADrB;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYJ,KADZ,YAEG,GAFH,eAGE;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAMG,GANH,eAOE;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,EAUG,GAVH,eAWE;AAAQ,MAAA,OAAO,EAAE,KAAKL,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXF,EAcG,GAdH,eAeE;AAAQ,MAAA,OAAO,EAAE,KAAKF,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAfF,CADF;AAqBD;;AAxC6B;;AA2ChCH,OAAO,CAACW,SAAR,GAAoB;AAClBL,EAAAA,KAAK,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADN;AAElBN,EAAAA,WAAW,EAAER,SAAS,CAACe,IAAV,CAAeD,UAFV;AAGlBH,EAAAA,WAAW,EAAEX,SAAS,CAACe,IAAV,CAAeD;AAHV,CAApB;AAMA,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementAsync = this.incrementAsync.bind(this);\n    this.incrementIfOdd = this.incrementIfOdd.bind(this);\n  }\n\n  incrementIfOdd() {\n    if (this.props.value % 2 !== 0) {\n      this.props.onIncrement()\n    }\n  }\n\n  incrementAsync() {\n    setTimeout(this.props.onIncrement, 1000)\n  }\n\n  render() {\n    const { value, onIncrement, onDecrement } = this.props\n    return (\n      <p>\n        Clicked: {value} times\n        {' '}\n        <button onClick={onIncrement}>\n          +\n        </button>\n        {' '}\n        <button onClick={onDecrement}>\n          -\n        </button>\n        {' '}\n        <button onClick={this.incrementIfOdd}>\n          Increment if odd\n        </button>\n        {' '}\n        <button onClick={this.incrementAsync}>\n          Increment async\n        </button>\n      </p>\n    )\n  }\n}\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n  onIncrement: PropTypes.func.isRequired,\n  onDecrement: PropTypes.func.isRequired\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}